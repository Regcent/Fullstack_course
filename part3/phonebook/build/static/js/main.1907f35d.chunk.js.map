{"version":3,"sources":["components/Contact.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","components/Error.js","services/contacts.js","App.js","index.js"],"names":["Contact","person","deletePersonWithId","name","number","onClick","id","Persons","persons","filterToUse","filter","toLowerCase","startsWith","map","key","Filter","newFilter","setNewFilter","value","onChange","event","target","PersonForm","props","onSubmit","addContact","newName","setNewName","newNumber","setNewNumber","type","Notification","message","className","Error","baseUrl","axios","get","then","response","data","newContact","post","contactId","delete","updatedContact","put","App","useState","setPersons","notification","setNotification","errorMessage","setErrorMessage","useEffect","personsService","preventDefault","alert","includes","window","confirm","find","updatedPerson","setTimeout","catch","error","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1907f35d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Contact = ({person, deletePersonWithId}) => (\r\n    <li>\r\n        {person.name} {person.number}\r\n        <button onClick={deletePersonWithId(person.id)}>delete</button>\r\n    </li>\r\n)\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst Persons = ({persons, filterToUse, deletePersonWithId}) => (\r\n    <>\r\n        {persons.filter((person) => (person.name.toLowerCase().startsWith(filterToUse.toLowerCase())))\r\n            .map((person) => <Contact key={person.name} person={person} deletePersonWithId={deletePersonWithId}/>)}\r\n    </>\r\n)\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({newFilter, setNewFilter}) => {\r\n    const handleFilterChange = (event) => setNewFilter(event.target.value)\r\n\r\n    return(\r\n        <div>\r\n            filter shown with: <input\r\n                value={newFilter}\r\n                onChange={handleFilterChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    const handleNameChange = (event) => props.setNewName(event.target.value)\r\n\r\n    const handleNumberChange = (event) => props.setNewNumber(event.target.value)\r\n\r\n    return (\r\n        <form onSubmit={props.addContact}>   \r\n            <div>\r\n                name: <input \r\n                    value={props.newName}\r\n                    onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input \r\n                    value={props.newNumber}\r\n                    onChange={handleNumberChange}/></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"notification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification\r\n  ","import React from 'react'\r\n\r\nconst Error = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Error","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios\r\n        .get(baseUrl)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst create = (newContact) => {\r\n    return axios\r\n        .post(baseUrl, newContact)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst deleteContact = (contactId) => {\r\n    return axios\r\n        .delete(`${baseUrl}/${contactId}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst update = (contactId, updatedContact) => {\r\n    return axios\r\n        .put(`${baseUrl}/${contactId}`, updatedContact)\r\n        .then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, deleteContact, update}","import React, { useState, useEffect } from 'react';\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport Error from './components/Error'\r\nimport personsService from './services/contacts.js'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([]) \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ newFilter, setNewFilter ] = useState('')\r\n    const [ notification, setNotification ] = useState(null)\r\n    const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n    useEffect(() => {\r\n      personsService\r\n        .getAll()\r\n        .then(persons => {\r\n          setPersons(persons)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const addContact = (event) => {\r\n        event.preventDefault()\r\n        if (newName === '') {\r\n            alert(\"Can't add empty name to the phonebook\")     \r\n        }\r\n        else if (persons.map((person) => person.name).includes(newName)) {\r\n            if (window.confirm(`Update ${newName}'s number to ${newNumber}?`)) {\r\n              const id = persons.find((person) => person.name === newName).id\r\n              personsService\r\n                .update(id, {name: newName, number: newNumber})\r\n                .then(updatedPerson => {\r\n                  setPersons(persons.map((person) => person.id !== id ? person : updatedPerson))\r\n                  setNotification(`${newName} was updated`)\r\n                  setTimeout(() => {\r\n                    setNotification(null)\r\n                  }, 3000)\r\n                })\r\n                .catch(error => {\r\n                  setErrorMessage(`${newName}'s information has already been deleted from server.`)\r\n                  setPersons(persons.filter(person => person.id !== id ? person : null))\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 3000)\r\n            })\r\n          }\r\n        }\r\n        else {\r\n            personsService\r\n              .create({name: newName, number: newNumber})\r\n              .then(createdPerson => {\r\n                setPersons(persons.concat(createdPerson))\r\n                setNotification(`${newName} was added`)\r\n                setTimeout(() => {\r\n                  setNotification(null)\r\n                }, 3000)\r\n              })\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n      }\r\n\r\n    const deletePersonWithId = (id) => {\r\n      return (event) => {\r\n        const name = persons.find((person) => person.id === id).name\r\n        if (window.confirm(`Delete ${name}?`)) {\r\n          personsService.deleteContact(id)\r\n          setPersons(persons.filter(person => person.id !== id ? person : null))\r\n          setNotification(`${name} was deleted`)\r\n            setTimeout(() => {\r\n              setNotification(null)\r\n            }, 3000)\r\n        }\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <Notification message={notification} />\r\n        <Error message={errorMessage} />\r\n        <Filter filter={newFilter} setNewFilter={setNewFilter}/>\r\n        <h2>Add a new</h2>\r\n        <PersonForm newName={newName} newNumber={newNumber} setNewName={setNewName} setNewNumber={setNewNumber} addContact={addContact}/>\r\n        <h2>Numbers</h2>\r\n        <Persons persons={persons} filterToUse={newFilter} deletePersonWithId={deletePersonWithId}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}